<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloudalibaba.account.mybatis.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.cloudalibaba.account.mybatis.po.Account">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ACCOUNT_CODE" jdbcType="VARCHAR" property="accountCode" />
    <result column="ACCOUNT_NAME" jdbcType="VARCHAR" property="accountName" />
    <result column="AMOUNT" jdbcType="DECIMAL" property="amount" />
    <result column="is_deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ACCOUNT_CODE, ACCOUNT_NAME, AMOUNT, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.cloudalibaba.account.mybatis.example.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleForUpdate" parameterType="com.cloudalibaba.account.mybatis.example.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
    for update
  </select>
  <select id="selectByExampleWithLimit" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="limit != null">
      limit #{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeyForUpdate" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where ID = #{id,jdbcType=INTEGER}
    for update
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cloudalibaba.account.mybatis.example.AccountExample">
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cloudalibaba.account.mybatis.po.Account">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account (ACCOUNT_CODE, ACCOUNT_NAME, AMOUNT, 
      is_deleted)
    values (#{accountCode,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{deleted,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.cloudalibaba.account.mybatis.po.Account">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountCode != null">
        ACCOUNT_CODE,
      </if>
      <if test="accountName != null">
        ACCOUNT_NAME,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
      <if test="deleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cloudalibaba.account.mybatis.example.AccountExample" resultType="java.lang.Long">
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountCode != null">
        ACCOUNT_CODE = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        ACCOUNT_NAME = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        AMOUNT = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.deleted != null">
        is_deleted = #{record.deleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account
    set ID = #{record.id,jdbcType=INTEGER},
      ACCOUNT_CODE = #{record.accountCode,jdbcType=VARCHAR},
      ACCOUNT_NAME = #{record.accountName,jdbcType=VARCHAR},
      AMOUNT = #{record.amount,jdbcType=DECIMAL},
      is_deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloudalibaba.account.mybatis.po.Account">
    update account
    <set>
      <if test="accountCode != null">
        ACCOUNT_CODE = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="deleted != null">
        is_deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloudalibaba.account.mybatis.po.Account">
    update account
    set ACCOUNT_CODE = #{accountCode,jdbcType=VARCHAR},
      ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      is_deleted = #{deleted,jdbcType=BIT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.cloudalibaba.account.mybatis.example.AccountExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleForUpdate" parameterType="com.cloudalibaba.account.mybatis.example.AccountExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
    for update
  </select>
</mapper>